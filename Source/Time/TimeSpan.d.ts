import { ICloneable, IFormattable, IComparable, ComparisonResult, IEquatable } from '../types';
import { DateTimeFormatInfo } from './DateTimeFormatInfo';
export declare class TimeSpan implements ICloneable<TimeSpan>, IFormattable, IComparable<TimeSpan>, IEquatable<TimeSpan> {
    static readonly millisecondsPerSecond: number;
    static readonly millisecondsPerMinute: number;
    static readonly millisecondsPerHour: number;
    static readonly millisecondsPerDay: number;
    static readonly zero: TimeSpan;
    static fromDays(days: number): TimeSpan;
    static fromHours(hours: number): TimeSpan;
    static fromMinutes(minutes: number): TimeSpan;
    static fromSeconds(seconds: number): TimeSpan;
    static fromMilliseconds(milliseconds: number): TimeSpan;
    static fromTimestamp(timestamp: number): TimeSpan;
    private _timestamp;
    readonly days: number;
    readonly hours: number;
    readonly minutes: number;
    readonly seconds: number;
    readonly milliseconds: number;
    readonly totalDays: number;
    readonly totalHours: number;
    readonly totalMinutes: number;
    readonly totalSeconds: number;
    readonly totalMilliseconds: number;
    readonly isNegative: boolean;
    readonly duration: TimeSpan;
    constructor(days?: number, hours?: number, minutes?: number, seconds?: number, milliseconds?: number);
    add(value: TimeSpan): TimeSpan;
    subtract(value: TimeSpan): TimeSpan;
    negate(): TimeSpan;
    clone(): TimeSpan;
    compareTo(other: TimeSpan): ComparisonResult;
    equals(other: TimeSpan): boolean;
    toString(format: string, formatInfo: DateTimeFormatInfo): string;
}
