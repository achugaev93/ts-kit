{
  "private": true,
  "name": "core",
  "version": "0.15.2",
  "scripts": {
    "bootstrap": "lerna bootstrap",
    "build": "npm run lint:fix && npm run compile && npm run test",
    "compile": "tsc",
    "contributors": "git log --pretty=\"%an <%ae>\" | sort | uniq > CONTRIBUTORS",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "docs": "gulp docs",
    "lerna:publish": "lerna publish from-git --yes",
    "lint": "tslint --format stylish --project .",
    "lint:fix": "tslint --fix --format stylish --project .",
    "format": "prettier --check \"**/*.{ts,js,json,yml}\"",
    "format:fix": "prettier --write \"**/*.{ts,js,json,yml}\"",
    "prepublishOnly": "npm run lint && npm run compile && npm install && npm test",
    "postinstall": "npm run bootstrap",
    "test": "jest",
    "test:watch": "jest --watch",
    "clean:coverage": "rm -rf ./coverage",
    "clean:dirs:modules": "rm -rf ./node_modules && find ./packages -type d -name '*node_modules' -exec rm -r {} +",
    "clean:dirs:empty": "find ./packages -type d -empty -delete",
    "clean:generated": "find ./packages -type f -name '*.js' -delete && find ./packages -type f -name '*.d.ts' -delete && find ./packages -type f -name '*.js.map' -delete",
    "clean:all": "npm run clean:coverage && npm run clean:dirs:modules && npm run clean:generated && npm run clean:dirs:empty",
    "semantic-release": "semantic-release"
  },
  "devDependencies": {
    "@types/jest": "^24.0.22",
    "coveralls": "^3.0.7",
    "gulp": "^4.0.2",
    "gulp-clean": "^0.4.0",
    "gulp-typedoc": "^2.2.3",
    "jest": "^24.9.0",
    "lerna": "^3.18.3",
    "prettier": "^1.18.2",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.10.1",
    "tslint": "^5.20.1",
    "typedoc": "^0.15.0",
    "typescript": "^3.7.2",
    "semantic-release": "^15.13.28"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/monumentjs/core"
  },
  "jest": {
    "clearMocks": true,
    "automock": false,
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "\\.test\\.tsx?$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "collectCoverage": true
  }
}
